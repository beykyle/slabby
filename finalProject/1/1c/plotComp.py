#!/usr/bin/env py36

"""
plotCompy.py is a plotter for 1c on 590 final
"""

import numpy as np
import configparser
import sys
from scipy.special import roots_legendre
from matplotlib    import pyplot as plt

__author__ = "Kyle Beyer"
__version__ = "1.0.1"
__email__ = "beykyle@umich.edu"
__status__ = "Development"

s = [3.0, 1.5, 1.0, 0.75, 0.6, 0.5, 0.42857142857142855, 0.375, 0.3333333333333333, 0.3, 0.2727272727272727, 0.25, 0.23076923076923078, 0.21428571428571427, 0.2]

sn = [0.48747946017367033, 0.49954149671825954, 0.4995462758540781, 0.4995481606905109, 0.49954929765371164, 0.49954974701065874, 0.4995502964407455, 0.4995506263367659, 0.49955082570542175, 0.4995504338501649, 0.49955057704149336, 0.49955068971083394, 0.49955076545491106, 0.4995508448844155, 0.49955092264853806]

an =[ 3.3238725021761377, 0.8392796684214412, 0.38618151601274736, 0.38618151601274736, 0.38618151601274736, 0.38618151601274736, 0.38618151601274736, 0.38618151601274736, 0.38618151601274736, 0.38618151601274736, 0.38618151601274736, 0.38618151601274736, 0.38618151601274736, 0.38618151601274736, 0.38618151601274736]

plt.plot( s , sn , label=r"$S_N$ spectral radius estimate")
plt.plot( s , an , label=r"Analytical worst case $|\omega{( \tau  , \Sigma_t \,h )}|_\infty$")
plt.xlabel(r"$\Sigma_t \, h$")
plt.ylabel(r"$\rho{(\Sigma_t \, h)}$")
plt.ylim([0,1])
plt.legend()
plt.tight_layout()
plt.savefig("rho.png")
