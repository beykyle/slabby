[General]
; ---------------------------------------------------------------------------------------------------------------------------------
; [General Settings] comments:
; ---------------------------------------------------------------------------------------------------------------------------------
; Slabby is a Diamond-Differenced, discrete ordinates, 1-D planar geometry, fixed-source, monoenergetic, isotropic scattering 
; neutron transport code
; 
; The simulation has the following general settings:
;   - Loud:                   if true, the simulation prints all information to the command line
;   - Latex:                  if true, tabulates output in latex table format
;   - Diagnostic:             if true, the simulation prints spectral radius estimate of the problem, as well as the 
;                             relative error at each time step, both to the output file and the command line if loud=true
;   - Output = fileName1:     specifies the filename for the angular flux output in each spatial bin
; --------------------------------------------------------------------------------------------------------------------------------
Loud         = true
LaTeX        = false
Diagnostic   = true
Output       = a.out

[Numerical Settings]
; ---------------------------------------------------------------------------------------------------------------------------------
; [General Settings] comments:
; ---------------------------------------------------------------------------------------------------------------------------------
;   - convergence = val:      specifies the relative error at which the simulation terminates
;   - quadSetOrder = val:     specifies the order of the Gauss-Legendre quadrature set for discrete ordinates
;   - method = str:           specifies the method (CMFD or SI)
;   - DSA = str   :           specifies the Diffusion Synthetic Acceleration method (CMFD, CMDSA, LCMDSA, or none)
;   - stepMethod = str:       specifies the step method (diamond, implicit, or characteristic)
;   - acceleration = str:     specifies the synthetic acceleration method (none , CMFD , idsa)
;                               For CMFD - coarse mesh section must be specified
;                               idsa = inconsistent (cell centered) DSA
; --------------------------------------------------------------------------------------------------------------------------------
convergence  = 0.000000001
quadSetOrder = 32
;acceleration = idsa 
acceleration = CMFD
;acceleration = none
;stepMethod   = implicit
;stepMethod   = diamond
stepMethod   = characteristic


[Mesh]
; ---------------------------------------------------------------------------------------------------------------------------------
; [Slab] comments:
; ---------------------------------------------------------------------------------------------------------------------------------
; The Geometry is a psuedo 1-D slab, with the following characteristics:
;   - regular:                if true, ignores meshData argument and takes in regular binning data
;   - width = Z:              width of the slab in cm (duh) 
;   - bins = n:               specifies the number of bins in the problem (integer)
;   - meshData = filemame:    A file for setup of an irregular mesh (optional)
 
;         fileName must be formatted with a left bin edge of a bin on each line, with the final line being the final right edge
;         For J bins from z_1/2 to Z = z_J+1/2:
;        
;         z_1/2  
;         z_3/2     
;         z_5/2     
;          
;          .
;          .
;          .   
;         z_J-1/2   
;         Z 
;
regular       = true
width         = 10.0
bins          = 1000
;meshData = mesh1.dat
[Material]
;   - homogenous:             if true, ignores the matData argument, and takes in homogenous material data from the following 
;                             input arguments
;   - SigT = val:             specifies the homogenous total macroscopic cross section in the problem in cm^-1
;   - SigS = val              specifies the homogenous scatter macroscopic cross section in the problem in cm^-1
;   - Q    = v                specifies the homogenous source in the problem in cm^-1 sec^-1 
;   - matData = fileName2:    specifies the file to read bin-wise material data from
;         
;         fileName2 must be formatted as a comma seperated value file (whitespace ignored):
;         
;         matDataType1  ,  matDataType2 , matDataType3  , ...   (must include all of Z, Q, SigT, SigS)
;         type1val1     ,  type2val1    , type3val1     , ...   
;         type1val2     ,  type2val2    , type3val2     , ...
;              .                .              .
;              .                .              .
;              .                .              .
;         Z defines the left bin edge of a region or cell
;         Q, SigT and SigS are specified for each region
;
; --------------------------------------------------------------------------------------------------------------------------------
homogenous    = true
SigT          = 1.0
SigS          = 0.94
Q             = 10.0
;matData       = data5.csv

[Boundary Conditions]
; ---------------------------------------------------------------------------------------------------------------------------------
; The left and right boundaries are specified. 
;  the options are: reflecting, vacuum, isotropic or monodirectional
;  if the latter two are used, the second option, leftFlux=val1 and rightFlux=val2 specifies the incident fluxes in cm^-2 s^-1
; ---------------------------------------------------------------------------------------------------------------------------------
left      = vacuum
right     = reflecting
leftFlux  = 0.0
rightFlux = 0.0

[Coarse Mesh]
bins = 25
